1- Run JS without HTML file. (node) ✅

2- Let, var & const 
(
Creating and Assigning Variables, ✅
Assigning operator, ✅
Variables Naming conventions, ✅
difference b/w var, let & const: ✅
Block Scope, ✅
Global Scope, ✅
Redeclared, ✅
hoisting, ✅
Note : prefered not to declared variable using var keyword,
)

3- Data Types:
(
Statically OR Dynamically Typed Language. ✅
Premitiveds & Non Premitives / Reference Data Types. ✅
typeof(variable) ✅
Conversion of String, boolean, null, undefined in to numbers.
Conversion of String and numbers in to boolean.
Conversion of numbers in to string.
Operators, opearnds ✅
)

4- Strings:
(
String Concatenation. ✅
String Interpolation / Template literalls / Template Strings. ✅
String Methods / Functions: ✅
    (
      1-  length, 2- toUpperCase(), 3- toLowerCase(), 4- charAt(), 5-indexOf(), 6- trim(), 7- slice(), 8-replace(), 9-includes(), 10-split(), 
    )
)

5- Number and Maths:
(
Basic mathematics operations. ✅
Numbers Methods / Functions: ✅
    {
        toString(), toFixed(1 /2 /3), toLocaleString()
    }
Maths: Math is built in libraray comes with in JS. ✅
Maths Functions / Methods ✅
    {
        Math.PI, Math.round(), Math.ceil(), Math.floor(), Math.min(3, 5 ,7 ,8 ), Math.max(3, 5 ,7 ,8 ), Math.random()*10 + 1, Math.trunc(13.37), Math.abs(-4)
    }
)



6- Stack & Heap Memory:
(
Primitives store in Stack. ✅
Non stores in Heap. ✅
)

7- Date and time in depth in javascript. ✅

8- Array in depth:✅
 Array Methods.✅


8- Objects in depth: ✅
 Singleton and nonsingleton objects. ✅
 iife Functions. ✅
 Default parameters in Function. ✅
 Anonymus Function. ✅
 Object de-structure and JSON API intro . ✅
 Arrow Function. 
 this keyword (When we refer current context we use this).
 Implicit and Explicit Return.


9-  Javascript execute code + call stack (LIFO)
 JS execution context. (2 Phases)
 Global Execution/Environmet Context.
 Function Execution Context.
 Memory Creation phase.
 Execution Phase.


10- Control Flow / Logic Flow.
 if else statements
 if else else if statements.
 nested ifs 
 Implicit or Explicit scope in if statements
 switch statements
 cases, break keyword, default in switch statements.
 Truthy and falsy values.
 Nullish Coalescing Operator (??): null undefined
 Ternery operator.




